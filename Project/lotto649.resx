<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>